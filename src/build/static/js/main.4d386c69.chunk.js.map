{"version":3,"sources":["assets/logo.svg","assets/lucas.png","assets/RDJ.png","assets/student.png","assets/einstien.png","app/theme.js","card/ducks/types.js","card/ducks/actions.js","card/ducks/selectors.js","card/ducks/operations.js","card/ducks/reducers.js","store/store.js","common/Header.js","common/Layout.js","card/Card.js","card/CardContainer.js","list/List.js","api/types.js","api/operations.js","api/actions.js","list/ListContainer.js","cardset/Course.js","cardset/CourseContainer.js","pages/Home.js","pages/Services.js","pages/About.js","pages/Contact.js","admin/Collection.js","admin/SideBar.js","pages/Admin.js","pages/AdminLogin.js","routes/Router.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","TestMasterTheme","createMuiTheme","palette","type","primary","main","secondary","NEXT_CARD","PREV_CARD","SET_CARDS","ADD_CARD","UPDATE_CARD","SWAP_SIDES","DELETE_CARD_ITEM","GET_CARDSETS","SET_ALL_CARDSETS","ADD_CARDSET","DELETE_CARDSET","EDIT_CARDSET","FLIP_CARD","setCards","card","types","payload","nextCard","prevCard","addCard","newCard","updateCard","side","content","deleteCardItem","itemId","swapSides","front","back","getCardsets","cardsets","setAllCardsets","addCardset","name","deleteCardset","flipCard","getCards","state","cards","getCurrentCard","currentCard","getCurrentCardSet","currentCardSet","getCardsetNames","allCardSets","getNumberOfCards","createSelector","length","getCurrentCardSetArray","action","cardSetLength","select","nextTemp","prevTemp","concat","updatedCardSet","map","_id","newCards","filter","item","cardset","initialState","flipped","ops","loggerMiddleware","createLogger","createStoreWithMiddleware","applyMiddleware","thunk","createStore","reducer","combineReducers","storeConfig","userStyles","makeStyles","theme","headerContainer","backgroundColor","width","logo","float","fontSize","color","headerLayout","display","padding","margin","title","height","navigation","justifyContent","textDecoration","navItem","border","borderRadius","Header","props","classes","className","src","Logo","alt","to","user","LayoutContainter","styled","div","Layout","children","Content","Counter","Card","this","cardSet","current","total","React","Component","actions","CardActions","enhance","compose","connect","CardSelectors","numberOfCards","currentCardSetArray","Container","CardButtons","CardButton","button","useSpring","opacity","transform","config","mass","tension","friction","onClick","style","interpolate","o","Paper","t","ButtonContainer","DeleteButton","IconButton","List","handleFront","event","clearTimeout","timeout","setState","target","value","setTimeout","id","update","swapItems","swap","handleDelete","deletedItem","delete","handleBack","console","log","Zoom","transformOrigin","enter","exit","mountOnEnter","unmountOnExit","in","Grid","container","spacing","xs","TextField","fullWidth","multiline","rowsMax","label","onChange","SwapHoriz","InfoOutlined","DeleteOutline","FETCH_CARDS_PENDING","FETCH_CARDS_SUCCESS","FETCH_CARDS_ERROR","base_url","fetchCards","dispatch","fetch","mode","then","res","json","error","catch","currentCardsSetArray","headers","Accept","method","body","JSON","stringify","cardsetId","cardId","url","deleteCard","useStyles","addContainer","paddingTop","updateCardItem","ItemList","key","AddBox","list","active","position","left","Course","ListItem","ListItemText","ListItemSecondaryAction","edge","aria-label","getCardSets","err","CourseContainer","handleKeyUp","keyCode","handleEnter","showInput","document","addEventListener","removeEventListener","courses","courseList","courseHeader","component","onKeyPress","plus","preAddCardset","withStyles","maxWidth","marginBlockEnd","slider","img","Home","study1","study2","study3","study5","study","index","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","Services","About","Contact","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","paper","input","marginBottom","table","Collections","handleAdd","cardsetChosen","chosen","serializer","collectionTitle","toUpperCase","slice","columns","field","data","Object","keys","icons","editable","onRowAdd","newData","root","SideBar","handleSelect","useState","selected","setSelect","handleClick","collection","cardsetList","subheader","ListSubheader","Admin","chosenCollection","cardsetName","services","users","collectionName","chosenSerializer","chosenCardset","Collection","AdminLogin","marginRight","wrapper","minHeight","push","footer","html","routes","Routes","path","listStyle","justify","store","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,shCCU5BC,E,MARSC,GAAe,CACrCC,QAAS,CACPC,KAAM,QACNC,QAAS,CAAEC,KAAM,qBACjBC,UAAW,CAAED,KAAM,c,kCCNVE,EAAY,iBACZC,EAAY,iBACZC,EAAY,iBACZC,EAAW,gBACXC,EAAc,mBACdC,EAAa,kBACbC,EAAmB,wBACnBC,EAAe,oBACfC,EAAmB,wBACnBC,EAAc,sBACdC,EAAiB,yBACjBC,EAAe,sBACfC,EAAY,iBCVlB,SAASC,EAASC,GACvB,MAAO,CACLlB,KAAMmB,EACNC,QAASF,GAIN,SAASG,IACd,MAAO,CACLrB,KAAMmB,GAIH,SAASG,IACd,MAAO,CACLtB,KAAMmB,GAIH,SAASI,EAAQC,GACtB,MAAO,CACLxB,KAAMmB,EACNC,QAASI,GAIN,SAASC,EAAWP,EAAMQ,EAAMC,GACrC,MAAO,CACL3B,KAAMmB,EACNC,QAAS,CAAEF,KAAMA,EAAMQ,KAAMA,EAAMC,QAASA,IAIzC,SAASC,EAAeC,GAC7B,MAAO,CACL7B,KAAMmB,EACNC,QAASS,GAGN,SAASC,EAAUD,EAAQE,EAAOC,GACvC,MAAO,CACLhC,KAAMmB,EACNC,QAAS,CAAES,OAAQA,EAAQE,MAAOA,EAAOC,KAAMA,IAI5C,SAASC,EAAYC,GAC1B,MAAO,CACLlC,KAAMmB,EACNC,QAASc,GAIN,SAASC,EAAeD,GAC7B,MAAO,CACLlC,KAAMmB,EACNC,QAASc,GAIN,SAASE,EAAWC,EAAMH,GAC/B,MAAO,CACLlC,KAAMmB,EACNC,QAAS,CAACiB,EAAMH,IAIb,SAASI,EAAcD,GAC5B,MAAO,CACLrC,KAAMmB,EACNC,QAASiB,GAIN,SAASE,IACd,MAAO,CACLvC,KAAMmB,G,aC5EGqB,EAAW,SAAAC,GAAK,OAAIA,EAAMC,OAC1BC,EAAiB,SAAAF,GAAK,OAAIA,EAAMG,aAChCC,EAAoB,SAAAJ,GAAK,OAAIA,EAAMK,gBACnCC,EAAkB,SAAAN,GAAK,OAAIA,EAAMO,aAEjCC,EAAmBC,YAC9B,CAACV,EAAUK,IACX,SAACH,EAAOI,GACN,OAAIA,EACKJ,EAAMI,GAAgBJ,MAAMS,OAE5B,QAKAC,EAAyBF,YACpC,CAACV,EAAUK,IACX,SAACH,EAAOI,GACN,OAAIA,EACKJ,EAAMI,GAAgBJ,MAEtB,Q,25BCtBN,IAAMzB,EAAW,SAACwB,EAAOY,GAC9B,OAAO,EAAP,GACKZ,EADL,CAEEG,YAAa,EACbE,eAAgBO,EAAOjC,WAIdC,GAAW,SAACoB,EAAOY,GAC9B,IAAMC,EAAgBC,EAAwBd,GACxCe,EAAWf,EAAMG,YAAc,EAErC,OAAO,EAAP,GACKH,EADL,CAEEG,YAHWY,EAAWF,EAAgB,EAAI,EAAIE,KAOrClC,GAAW,SAACmB,EAAOY,GAC9B,IAAMC,EAAgBC,EAAwBd,GACxCgB,EAAWhB,EAAMG,YAAc,EAErC,OAAO,EAAP,GACKH,EADL,CAEEG,YAHWa,EAAW,EAAIH,EAAgB,EAAIG,KAOrClC,GAAU,SAACkB,EAAOY,GAC7B,IAAMP,EAAiBS,EAAyBd,GAEhD,OAAO,EAAP,GACKA,EADL,CAEEC,MAAM,EAAD,GACAD,EAAMC,MADN,eAEFI,EAFE,KAGEL,EAAMC,MAAMI,GAHd,CAIDJ,MAAOD,EAAMC,MAAMI,GAAgBJ,MAAMgB,OAAOL,EAAOjC,gBAMlDK,GAAa,SAACgB,EAAOY,GAChC,IAAMP,EAAiBS,EAAyBd,GAC5Bc,EAAsBd,GACbc,EAA8Bd,GAC3D,GAAuB,OAAnBK,EACF,OAAOL,EAET,IAAMkB,EAAiBlB,EAAMC,MAAMI,GAAgBJ,MAAMkB,KAAI,SAAA1C,GAAI,OAC/DA,EAAK2C,MAAQR,EAAOnC,KAApB,KAAgCA,EAAhC,eAAuCmC,EAAO3B,KAAO2B,EAAO1B,UAAYT,KAG1E,OAAO,EAAP,GACKuB,EADL,CAEEC,MAAM,EAAD,GACAD,EAAMC,MADN,eAEFI,EAFE,KAGEL,EAAMC,MAAMI,GAHd,CAIDJ,MAAOiB,SAMF/B,GAAiB,SAACa,EAAOY,GACpC,IAAMP,EAAiBS,EAAyBd,GAChD,GAAuB,OAAnBK,EACF,OAAOL,EAET,IAAMqB,EAAWrB,EAAMC,MAAMI,GAAgBJ,MAAMqB,QACjD,SAAAC,GAAI,OAAIA,EAAKH,MAAQR,EAAOjC,WAE9B,OAAO,EAAP,GACKqB,EADL,CAEEC,MAAM,EAAD,GACAD,EAAMC,MADN,eAEFI,EAFE,KAGEL,EAAMC,MAAMI,GAHd,CAIDJ,MAAOoB,SAMFhC,GAAY,SAACW,EAAOY,GAC/B,IAAMP,EAAiBS,EAAyBd,GAChD,GAAuB,OAAnBK,EACF,OAAOL,EAGT,IAAMkB,EAAiBlB,EAAMC,MAAMI,GAAgBJ,MAAMkB,KAAI,SAAA1C,GAAI,OAC/DA,EAAK2C,MAAQR,EAAOxB,OAApB,KACSX,EADT,CACea,MAAOsB,EAAOrB,KAAMA,KAAMqB,EAAOtB,QAC5Cb,KAEN,OAAO,EAAP,GACKuB,EADL,CAEEC,MAAM,EAAD,GACAD,EAAMC,MADN,eAEFI,EAFE,KAGEL,EAAMC,MAAMI,GAHd,CAIDJ,MAAOiB,SAMFrB,GAAgB,SAACG,EAAOY,GAAY,IAAD,EACgBZ,EAAMC,MADtB,EACrCW,EAAOjC,QAAQiB,KADsB,KAG9C,OAAO,EAAP,GACKI,EADL,CAEEC,MAL4C,0BAM5CI,eAAgB,KAChBE,YAAaP,EAAMO,YAAYe,QAC7B,SAAAE,GAAO,OAAIA,IAAYZ,EAAOjC,QAAQiB,W,6jBCpHrC,IAAM6B,GAAe,CAC1BtB,YAAa,KACbE,eAAgB,KAChBJ,MAAO,GACPM,YAAa,GACbmB,SAAS,GA4DIjD,OAzDR,WAA6C,IAA/BuB,EAA8B,uDAAtByB,GAAcb,EAAQ,uCACjD,OAAQA,EAAOrD,MACb,KAAKmB,EACH,OAAOiD,EAAa3B,EAAOY,GAC7B,KAAKlC,EACH,OAAOiD,GAAa3B,GACtB,KAAKtB,EACH,OAAOiD,GAAa3B,GACtB,KAAKtB,EACH,OAAOiD,GAAY3B,EAAOY,GAC5B,KAAKlC,EACH,OAAOiD,GAAe3B,EAAOY,EAAOjC,SACtC,KAAKD,EACH,OAAOiD,GAAc3B,EAAOY,EAAOjC,SACrC,KAAKD,EACH,OAAOiD,GAAmB3B,EAAOY,GACnC,KAAKlC,EACH,OAAO,MACFsB,EADL,CAEEO,YAAaK,EAAOjC,UAExB,KAAKD,EACH,OAAO,MACFsB,EADL,CAEEC,MAAOW,EAAOjC,UAElB,KAAKD,EACH,OAAO,MACFsB,EADL,CAEEK,eAAgBO,EAAOjC,QAAQ,GAC/BwB,YAAa,EACbI,YAAaP,EAAMO,YAAYU,OAAOL,EAAOjC,QAAQ,IACrDsB,MAAM,MACDD,EAAMC,MADN,eAEFW,EAAOjC,QAAQ,GAAKiC,EAAOjC,QAAQ,OAG1C,KAAKD,EACH,OAAOiD,GAAkB3B,EAAOY,GAClC,KAAKlC,EACH,OAAO,MACFsB,EADL,CAEEK,eAAgBO,EAAOjC,QACvB4B,YAAaP,EAAMO,YAAYY,KAAI,SAAAK,GAAO,OACxCA,IAAYZ,EAAOjC,QAAQ,GAAKiC,EAAOjC,QAAQ,GAAK6C,OAG1D,KAAK9C,EACH,OAAO,MACFsB,EADL,CAEE0B,SAAU1B,EAAM0B,UAEpB,QACE,OAAO1B,IC3DP4B,GAAmBC,yBAEnBC,GAA4BC,YAAgBH,GAAkBI,IAAlCD,CAChCE,KAGIC,GAAUC,YAAgB,CAC9B1D,UAKa2D,GAFK,SAAAX,GAAY,OAC9BK,GAA0BI,GAAST,I,iDCX/BY,GAAaC,cAAW,SAAAC,GAAK,MAAK,CACtCC,gBAAiB,CACfC,gBAAiBF,EAAMjF,QAAQE,QAAQC,KACvCiF,MAAO,QAETC,KAAM,CACJC,MAAO,OACPC,SAAU,GACVC,MAAOP,EAAMjF,QAAQI,UAAUD,MAEjCsF,aAAc,CACZC,QAAS,OACTC,QAAS,SACTC,OAAQ,OACRR,MAAO,OAETS,MAAO,CACLT,MAAO,MACPQ,OAAQ,OACRE,OAAQ,QAEVC,WAAY,CACVL,QAAS,OACTM,eAAgB,WAChBZ,MAAO,MACP,OAAQ,CACNa,eAAgB,SAGpBC,QAAS,CACPV,MAAOP,EAAMjF,QAAQI,UAAUD,KAC/BwF,QAAS,YACTC,OAAQ,SACRO,OAAO,OAAD,OAASlB,EAAMjF,QAAQI,UAAUD,KAAjC,UACNiG,aAAc,OA0CHC,GAtCA,SAAAC,GACb,IAAMC,EAAUxB,KAChB,OACE,yBAAKyB,UAAWD,EAAQrB,iBACtB,yBAAKsB,UAAWD,EAAQd,cACtB,yBAAKe,UAAWD,EAAQV,OACtB,yBAAKW,UAAWD,EAAQlB,MACtB,yBAAKoB,IAAKC,KAAMC,IAAI,uBAGxB,yBAAKH,UAAWD,EAAQR,YACtB,kBAAC,KAAD,CAAMa,GAAG,KACP,yBAAKJ,UAAWD,EAAQL,SAAxB,SAEF,kBAAC,KAAD,CAAMU,GAAG,YACP,yBAAKJ,UAAWD,EAAQL,SAAxB,aAEF,kBAAC,KAAD,CAAMU,GAAG,SACP,yBAAKJ,UAAWD,EAAQL,SAAxB,UAEF,kBAAC,KAAD,CAAMU,GAAG,WACP,yBAAKJ,UAAWD,EAAQL,SAAxB,YAEDI,EAAMO,KACL,kBAAC,KAAD,CAAMD,GAAG,WACP,yBAAKJ,UAAWD,EAAQL,SAAxB,YAGF,kBAAC,KAAD,CAAMU,GAAG,QACP,yBAAKJ,UAAWD,EAAQL,SAAxB,c,mJCrEd,IAAMY,GAAmBC,KAAOC,IAAV,MAQPC,GAJA,SAAAX,GACb,OAAO,kBAACQ,GAAD,KAAmBR,EAAMY,W,sWCLlC,IAAMC,GAAUJ,KAAOC,IAAV,MAQPI,GAAUL,KAAOC,IAAV,MAuBEK,G,sLAfH,IAAD,EACmCC,KAAKhB,MAAvCiB,EADD,EACCA,QAAS5F,EADV,EACUA,KAAM6F,EADhB,EACgBA,QAASC,EADzB,EACyBA,MAChC,OACE,6BACGF,GACC,kBAACH,GAAD,KACGI,EADH,IACaC,GAGf,kBAACN,GAAD,KAAUxF,Q,GAVC+F,IAAMC,W,8sBCFzB,IAQMC,GAAU,CACdtG,SAAUuG,EAAYvG,SACtBC,SAAUsG,EAAYtG,SACtBiB,SAAUqF,EAAYrF,UAGlBsF,GAAUC,YACdC,aAfsB,SAAC,GAAD,IAAG7G,EAAH,EAAGA,KAAH,MAAe,CACrCA,OACA0B,YAAaoF,EAAcrF,eAAezB,GAC1C4B,eAAgBkF,EAAcnF,kBAAkB3B,GAChD+G,cAAeD,EAAc/E,iBAAiB/B,GAC9CgH,oBAAqBF,EAAc5E,uBAAuBlC,MAYxDyG,KAIEQ,GAAYrB,KAAOC,IAAV,MAQTqB,GAActB,KAAOC,IAAV,MAKXsB,GAAavB,KAAOwB,OAAV,MAmFDT,WA9Df,SAAuBxB,GAAQ,IAAD,EACGkC,aAAU,CACvCC,QAASnC,EAAMnF,KAAKiD,QAAU,EAAI,EAClCsE,UAAU,8BAAD,OAAgCpC,EAAMnF,KAAKiD,QAAU,IAAM,EAA3D,QACTuE,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,MAHrCJ,EADoB,EACpBA,UAAWD,EADS,EACTA,QAMnB,OACE,kBAAC,GAAD,KACGnC,EAAMvD,gBACL,oCACE,kBAACqF,GAAD,CAAWW,QAASzC,EAAM9D,UACxB,kBAAC,KAAEwE,IAAH,CACER,UAAU,OACVwC,MAAO,CAAEP,QAASA,EAAQQ,aAAY,SAAAC,GAAC,OAAI,EAAIA,KAAIR,cAEnD,kBAACS,GAAA,EAAD,CAAO3C,UAAU,SACf,kBAAC,GAAD,CACEe,QAASjB,EAAMvD,eACf0E,MAAOnB,EAAM4B,cACbV,QAASlB,EAAMzD,YAAc,EAC7BlB,KAAM2E,EAAM6B,oBAAoB7B,EAAMzD,aAAab,UAKzD,kBAAC,KAAEgF,IAAH,CACER,UAAU,OACVwC,MAAO,CACLP,UACAC,UAAWA,EAAUO,aAAY,SAAAG,GAAC,gBAAOA,EAAP,yBAGpC,kBAACD,GAAA,EAAD,CAAO3C,UAAU,SACf,kBAAC,GAAD,CACEe,QAASjB,EAAMvD,eACf0E,MAAOnB,EAAM4B,cACbV,QAASlB,EAAMzD,YAAc,EAC7BlB,KAAM2E,EAAM6B,oBAAoB7B,EAAMzD,aAAaZ,UAM3D,kBAACoG,GAAD,KACG/B,EAAMvD,gBACL,oCACE,kBAACuF,GAAD,CAAY9B,UAAU,MAAMuC,QAAS,kBAAMzC,EAAM/E,aAAjD,YAGA,kBAAC+G,GAAD,CAAY9B,UAAU,MAAMuC,QAAS,kBAAMzC,EAAMhF,aAAjD,e,sVCnHhB,IAAM+H,GAAkBtC,aAAOoC,KAAPpC,CAAH,MAMfuC,GAAevC,aAAOwC,KAAPxC,CAAH,MA8GHyC,G,YAxGb,WAAYlD,GAAQ,IAAD,+BACjB,8CAAMA,KASRmD,YAAc,SAAAC,GACZC,aAAa,EAAKC,SAClB,EAAKC,SAAS,CACZ7H,MAAO0H,EAAMI,OAAOC,QAEtB,EAAKH,QAAUI,YAAW,WAAO,IACvBC,EAAO,EAAK3D,MAAZ2D,GACR,EAAK3D,MAAM4D,OAAOD,EAAI,QAAS,EAAKvH,MAAMV,SACzC,MAlBc,EAqBnBmI,UAAY,SAACF,EAAIjI,EAAOC,GACtB,EAAK4H,SAAS,CACZ7H,MAAO,EAAKU,MAAMT,KAClBA,KAAM,EAAKS,MAAMV,QAEnB,EAAKsE,MAAM8D,KAAKH,EAAIjI,EAAOC,IA1BV,EA4BnBoI,aAAe,SAAAJ,GACb,EAAKJ,SAAS,CACZS,YAAa,EAAKhE,MAAM2D,KAG1BD,YAAW,WACT,EAAK1D,MAAMiE,OAAON,KACjB,MAnCc,EAsCnBO,WAAa,SAAAd,GACXC,aAAa,EAAKC,SAClB,EAAKC,SAAS,CACZ5H,KAAMyH,EAAMI,OAAOC,QAErB,EAAKH,QAAUI,YAAW,WAAO,IACvBC,EAAO,EAAK3D,MAAZ2D,GACR,EAAK3D,MAAM4D,OAAOD,EAAI,OAAQ,EAAKvH,MAAMT,QACxC,MA5CH,EAAKS,MAAQ,CACXV,MAAO,EAAKsE,MAAMtE,MAClBC,KAAM,EAAKqE,MAAMrE,KACjBqI,YAAa,MAEf,EAAKV,QAAU,KAPE,E,wEAiDT,IAAD,SACiBtC,KAAK5E,MAArBV,EADD,EACCA,MAAOC,EADR,EACQA,KAEf,OADAwI,QAAQC,IAAI,gBAEV,oCACE,kBAACC,GAAA,EAAD,CACE3B,MAAO,CAAE4B,gBAAiB,OAC1BhB,QAAS,CAAEiB,MAAO,EAAGC,KAAM,KAC3BC,cAAY,EACZC,eAAa,EACbC,GAAI3D,KAAK5E,MAAM4H,cAAgBhD,KAAKhB,MAAM2D,IAE1C,kBAACiB,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG5E,UAAU,aACpC,kBAAC0E,GAAA,EAAD,CAAMjH,MAAI,EAACoH,IAAE,GACX,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,WAAS,EACTC,QAAQ,IACRxB,GAAG,QACHyB,MAAM,QACNC,SAAUrE,KAAKmC,YACfM,MAAO/H,KAGX,kBAACkJ,GAAA,EAAD,CAAMjH,MAAI,EAACoH,IAAE,GACX,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,WAAS,EACTC,QAAQ,IACRxB,GAAG,OACHyB,MAAM,OACNC,SAAUrE,KAAKkD,WACfT,MAAO9H,KAGX,kBAACoH,GAAD,KACE,kBAACC,GAAD,CACEP,QAAS,kBAAM,EAAKoB,UAAU,EAAK7D,MAAM2D,GAAIjI,EAAOC,KAEpD,kBAAC2J,GAAA,EAAD,CAAWrG,SAAS,WAEtB,kBAAC+D,GAAD,KACE,kBAACuC,GAAA,EAAD,CAActG,SAAS,WAEzB,kBAAC+D,GAAD,CAAcP,QAAS,kBAAM,EAAKsB,aAAa,EAAK/D,MAAM2D,MACxD,kBAAC6B,GAAA,EAAD,CAAevG,SAAS,mB,GA/FrBmC,IAAMC,WCbZoE,GAAsB,0BACtBC,GAAsB,0BACtBC,GAAoB,wBCHjC,IAAIC,GAEE,iCAGOC,GAAa,WACxB,OAAO,SAAAC,GACLA,ECPK,CACLnM,KAAMmB,KDONiL,MAAMH,GAAW,YAAa,CAC5BI,KAAM,SAELC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApK,GACJ,GAAIA,EAASuK,MACX,MAAMvK,EAASuK,MAEjB,IAAI/J,EAAQ,GAaZ,OAZAR,EAAS0B,KACP,SAAAK,GAAO,OACJvB,EAAMuB,EAAQ5B,MAAQ,CACrB2H,GAAI/F,EAAQJ,IACZnB,MAAOuB,EAAQvB,UAGrByJ,ECnBD,SAA2BzJ,GAChC,MAAO,CACL1C,KAAMmB,GACNuB,MAAOA,GDgBMiF,IACTwE,EAASvE,EAAY3F,YAAYS,IACjCyJ,EACEvE,EAAYzF,eAAeD,EAAS0B,KAAI,SAAAK,GAAO,OAAIA,EAAQ5B,UAEtDH,KAERwK,OAAM,SAAAD,GACLN,ECpBD,SAAyBM,GAC9B,MAAO,CACLzM,KAAMmB,GACNsL,MAAOA,GDiBM9E,CAAwB8E,S,UEJnC5E,GAAUC,YACdC,aArBsB,SAAC,GAAD,IAAG7G,EAAH,EAAGA,KAAH,MAAe,CACrCA,OACA0B,YAAaoF,EAAcrF,eAAezB,GAC1CyL,qBAAsB3E,EAAc5E,uBAAuBlC,GAC3D4B,eAAgBkF,EAAcnF,kBAAkB3B,OAGvB,SAAAiL,GACzB,MAAO,CACL5K,QAAS,SAAAuB,GAAc,OAAIqJ,EFoBR,SAAArJ,GACrB,IAAMtB,EAAU,CAAEN,KAAM,CAAEa,MAAO,GAAIC,KAAM,KAG3C,OAAO,SAAAmK,GACLC,MAHUH,2CAGEnJ,EAAekH,GAAI,CAC7BqC,KAAM,OACNO,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUzL,KAEpB8K,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAArI,GACJkI,EAASvE,EAAYrG,QAAQ0C,EAAQvB,MAAMuB,EAAQvB,MAAMS,OAAS,SEpClC5B,CAAQuB,KAC5CrB,WAAY,SAACyL,EAAWC,EAAQzL,EAAMC,GAA1B,OACVwK,EFuDoB,SAACe,EAAWC,EAAQzL,EAAMC,GAClD,OAAO,SAAAwK,GACL,IAAMiB,EAAMnB,GAAW,aAAeiB,EAAY,IAAMC,EAElDJ,EAAO,CAAE7L,KAAK,eAAIQ,EAAOC,IAE/ByK,MAAMgB,EAAK,CACTf,KAAM,OACNO,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,OAAQ,MACRC,KAAMC,KAAKC,UAAUF,KACpBT,KAAKH,EAASvE,EAAYnG,WAAW0L,EAAQzL,EAAMC,MErE3CF,CAAWyL,EAAWC,EAAQzL,EAAMC,KAC/C0L,WAAY,SAACvK,EAAgBkH,GAC3BmC,EFqCoB,SAACrJ,EAAgBqK,GACzC,OAAO,SAAAhB,GACL,IAAMiB,EAAMnB,GAAW,aAAenJ,EAAekH,GAAK,IAAMmD,EAEhEf,MAAMgB,EAAK,CACTf,KAAM,OACNO,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,OAAQ,MACRC,KAAMC,KAAKC,UARA,CAAE3C,OAAQ,aASpBgC,KAAKH,EAASvE,EAAYhG,eAAeuL,MEjDjCE,CAAWvK,EAAgBkH,KAEtClI,UAAW,SAACkI,EAAIjI,EAAOC,GAAZ,OACTmK,EAASvE,EAAY9F,UAAUkI,EAAIjI,EAAOC,UAW1CsL,GAAYvI,cAAW,SAAAC,GAAK,MAAK,CACrCkG,UAAW,CACTvF,OAAQ,OACRR,MAAO,IACPO,QAAS,UAEX6H,aAAc,CACZ9H,QAAS,OACT+H,WAAY,eA0DD3F,WAtDf,SAAuBxB,GACrBmE,QAAQC,IAAI,0BAA2BpE,EAAMsG,sBAE7C,IAAM/K,EAAiB,SAAAoI,GACrB3D,EAAMgH,WAAWhH,EAAMnF,KAAKwB,MAAM2D,EAAMvD,gBAAiBkH,IAGrDyD,EAAiB,SAACN,EAAQzL,EAAMC,GACpC0E,EAAM5E,WACJ4E,EAAMnF,KAAKwB,MAAM2D,EAAMvD,gBAAgBkH,GACvCmD,EACAzL,EACAC,IAIE+L,EAAWrH,EAAMvD,eACnBuD,EAAMsG,qBAAqB/I,KAAI,SAAA1C,GAC7B,OACE,kBAAC,GAAD,CACEyM,IAAKzM,EAAK2C,IACVmG,GAAI9I,EAAK2C,IACT9B,MAAOb,EAAKa,MACZC,KAAMd,EAAKc,KACXiI,OAAQwD,EACRnD,OAAQ1I,EACRuI,KAAM9D,EAAMvE,eAIlB,KAEEwE,EAAUgH,KAChB,OACE,yBAAK/G,UAAWD,EAAQ4E,WACrB7E,EAAMvD,eACL,kBAACoG,GAAA,EAAD,CAAO3C,UAAU,cACdmH,EACD,yBAAKnH,UAAWD,EAAQiH,cACtB,kBAACjE,GAAA,EAAD,CACE/C,UAAU,YACVuC,QAAS,kBACPzC,EAAM9E,QAAQ8E,EAAMnF,KAAKwB,MAAM2D,EAAMvD,mBAGvC,kBAAC8K,GAAA,EAAD,SAIJ,S,6DC3FJN,GAAYvI,cAAW,SAAAC,GAAK,MAAK,CACrC6I,KAAM,SAAAC,GAAM,MAAK,CACfC,SAAU,WACV,UAAW,CACT7I,gBAAiBF,EAAMjF,QAAQI,UAAUD,MAE3CgF,gBAAiB4I,EAAS9I,EAAMjF,QAAQI,UAAUD,KAAO,QACzD,WAAY,CACVyB,QAAS,KACToM,SAAU,WACVC,KAAM,EACN7I,MAAO,EACPU,OAAQ,OACRX,gBAAiB4I,EAAS9I,EAAMjF,QAAQE,QAAQC,KAAO,mBAG3DoI,OAAQ,SAAAwF,GAAM,MAAK,CACjB,WAAY,CACVrI,QAASqI,EAAS,QAAU,OAC5B,UAAW,CACTvI,MAAOP,EAAMjF,QAAQE,QAAQC,KAC7BgF,gBAAiB,wBAoBV+I,GAdA,SAAC,GAAiD,IAA/C3L,EAA8C,EAA9CA,cAAewG,EAA+B,EAA/BA,QAAS7I,EAAsB,EAAtBA,QAAS6N,EAAa,EAAbA,OAC3CxH,EAAUgH,GAAUQ,GAC1B,OACE,kBAACI,GAAA,EAAD,CAAU3H,UAAWD,EAAQuH,KAAMvF,QAAM,EAACQ,QAASA,GACjD,kBAACqF,GAAA,EAAD,CAAclO,QAASA,IACvB,kBAACmO,GAAA,EAAD,CAAyB7H,UAAWD,EAAQgC,QAC1C,kBAACgB,GAAA,EAAD,CAAY+E,KAAK,MAAMC,aAAW,SAASxF,QAASxG,GAClD,kBAAC,KAAD,U,UCbJuF,GAAUC,YACdC,aAnBsB,SAAC,GAAD,IAAG7G,EAAH,EAAGA,KAAH,MAAe,CACrCwB,MAAOsF,EAAcxF,SAAStB,GAC9BgB,SAAU8F,EAAcjF,gBAAgB7B,GACxC4B,eAAgBkF,EAAcnF,kBAAkB3B,OAGvB,SAAAiL,GACzB,MAAO,CACLoC,YAAa,kBAAMpC,EAASD,OAC5B9J,WAAY,SAAAC,GAAI,OAAI8J,EJ2EE,SAAA9J,GACxB,OAAO,SAAA8J,GACL,IAEMY,EAAO,CAAE1K,KAAMA,GAErB+J,MAJYH,0CAID,CACTI,KAAM,OACNO,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUF,KAEpBT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAArI,GAAO,OACXkI,EACEvE,EAAYxF,WAAWC,EAAM,CAC3B2H,GAAI/F,EAAQJ,IACZnB,MAAOuB,EAAQvB,YAIpBgK,OAAM,SAAA8B,GAAG,OAAIhE,QAAQC,IAAI+D,OInGCpM,CAAWC,KACxCpB,SAAU,SAAAoB,GAAI,OAAI8J,EAASvE,EAAY3G,SAASoB,KAChDC,cAAe,SAAA4K,GAAS,OAAIf,EJqGH,SAAAe,GAC3B,OAAO,SAAAf,GAGLC,MAFYH,GAAW,aAAeiB,EAE3B,CACTb,KAAM,OACNS,OAAQ,WAEPR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAArI,GAAO,OAAIkI,EAASvE,EAAYtF,cAAc2B,OACnDyI,OAAM,SAAA8B,GAAG,OAAIhE,QAAQC,IAAI+D,OI/GSlM,CAAc4K,KACnD7L,SAAU,kBAAM8K,EAASvE,EAAYvG,aACrCC,SAAU,kBAAM6K,EAASvE,EAAYtG,aACrCiB,SAAU,kBAAM4J,EAASvE,EAAYrF,kBA6BnCkM,G,YACJ,WAAYpI,GAAQ,IAAD,+BACjB,8CAAMA,KAeRqI,YAAc,SAAAjF,GAEZ,OADAe,QAAQC,IAAI,MAAOhB,EAAMkF,SACjBlF,EAAMkF,SACZ,KAAK,GACH,EAAKtI,MAAM9D,WACX,MACF,KAAK,GACH,EAAK8D,MAAMhF,WACX,MACF,KAAK,GACH,EAAKgF,MAAM/E,aA1BE,EAuCnBsN,YAAc,SAAAnF,GACM,UAAdA,EAAMkE,MACR,EAAKtH,MAAMjE,WAAWqH,EAAMI,OAAOC,OACnC,EAAKF,SAAS,CACZiF,WAAW,MA3CE,EAgDnBvM,cAAgB,WAAO,IAAD,EACc,EAAK+D,MAA/BvD,EADY,EACZA,eAAgBJ,EADJ,EACIA,MACxB,EAAK2D,MAAM/D,cAAcI,EAAMI,GAAgBkH,KAhD/C,EAAKvH,MAAQ,CACXoM,WAAW,GAHI,E,mFAQjBxH,KAAKhB,MAAMkI,cACXO,SAASC,iBAAiB,QAAS1H,KAAKqH,aAAa,K,6CAIrDI,SAASE,oBAAoB,QAAS3H,KAAKqH,aAAa,K,sCAqBxDlE,QAAQC,IAAI,QACZpD,KAAKuC,SAAS,CACZiF,WAAW,M,+BAiBL,IAAD,OACCvI,EAAYe,KAAKhB,MAAjBC,QACRkE,QAAQC,IAAIpD,KAAKhB,MAAMvD,gBACvB,IAAMmM,EACJ5H,KAAKhB,MAAMnE,SAASiB,OAAS,EACzBkE,KAAKhB,MAAMnE,SAAS0B,KAAI,SAAAK,GACtB,OACE,kBAAC,GAAD,CACE0J,IAAK1J,EACL6E,QAAS,kBAAM,EAAKzC,MAAMpF,SAASgD,IACnChE,QAASgE,EACT6J,OAAQ7J,IAAY,EAAKoC,MAAMvD,eAC/BR,cAAe,EAAKA,mBAI1B,KACN,OACE,yBAAKiE,UAAWD,EAAQ4I,YACtB,wBAAI3I,UAAWD,EAAQ6I,cAAvB,WACA,kBAAC,KAAD,CAAMC,UAAU,MAAMd,aAAW,6BAC9BW,EACA5H,KAAK5E,MAAMoM,WACV,kBAACX,GAAA,EAAD,KACE,kBAAC7C,GAAA,EAAD,CAAWgE,WAAYhI,KAAKuH,gBAKlC,yBAAKrI,UAAWD,EAAQiH,cACtB,kBAACjE,GAAA,EAAD,CACE/C,UAAWD,EAAQgJ,KACnBxG,QAAS,kBAAM,EAAKyG,kBAEpB,kBAAC3B,GAAA,EAAD,a,GAxFkBnG,IAAMC,WAgGrB8H,iBAlHA,SAAAxK,GAAK,MAAK,CACvBkK,WAAY,CACV/J,MAAO,OACPsK,SAAU,KAEZN,aAAc,CACZ5J,MAAOP,EAAMjF,QAAQE,QAAQC,KAC7BwP,eAAgB,GAElBnC,aAAc,CACZ9H,QAAS,OACT+H,WAAY,WAEd8B,KAAM,CACJ3J,OAAQ,sBAoGG6J,CAAmB3H,GAAQ4G,K,yHC5IpC3J,GAAaC,cAAW,SAAAC,GAAK,MAAK,CACtCkG,UAAW,CACT/F,MAAO,OACPO,QAAS,GACTC,OAAQ,OACRT,gBAAiBF,EAAMjF,QAAQE,QAAQC,MAEzCyP,OAAQ,CACNhK,OAAQ,QAEViK,IAAK,CACHzK,MAAO,YAiCI0K,GA7BF,WACX,IAUMvJ,EAAUxB,KACV+I,EAAO,CAACiC,KAAQC,KAAQC,KAAQC,MAAQrM,KAAI,SAACsM,EAAOC,GACxD,OACE,yBAAKxC,IAAKwC,EAAO5J,UAAWD,EAAQ4E,WAClC,yBAAK3E,UAAWD,EAAQsJ,IAAKpJ,IAAK0J,EAAOxJ,IAAG,eAAUyJ,SAI5D,OACE,6BACE,oCACA,kBAAC,KAAD,eAAQ5J,UAAWD,EAAQqJ,QArBhB,CACbS,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,cAAe,IACfC,QAAQ,IAcH9C,KCtCM+C,GARE,WACf,OACE,6BACE,0CCKSC,GARD,WACZ,OACE,6BACE,uCCKSC,GARC,WACd,OACE,6BACE,yC,+iBCeN,IAAMC,GAAa,CACjBC,IAAKC,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAY7K,EAAZ,CAAmB6K,IAAKA,QACxDC,MAAOF,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAW7K,EAAX,CAAkB6K,IAAKA,QACzDE,MAAOH,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAW7K,EAAX,CAAkB6K,IAAKA,QACzDG,OAAQJ,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAmB7K,EAAnB,CAA0B6K,IAAKA,QAClEI,YAAaL,sBAAW,SAAC5K,EAAO6K,GAAR,OACtB,kBAAC,KAAD,iBAAkB7K,EAAlB,CAAyB6K,IAAKA,QAEhCK,KAAMN,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAU7K,EAAV,CAAiB6K,IAAKA,QACvDM,OAAQP,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAa7K,EAAb,CAAoB6K,IAAKA,QAC5DO,OAAQR,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAgB7K,EAAhB,CAAuB6K,IAAKA,QAC/DQ,UAAWT,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAe7K,EAAf,CAAsB6K,IAAKA,QACjES,SAAUV,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAc7K,EAAd,CAAqB6K,IAAKA,QAC/DU,SAAUX,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAkB7K,EAAlB,CAAyB6K,IAAKA,QACnEW,aAAcZ,sBAAW,SAAC5K,EAAO6K,GAAR,OACvB,kBAAC,KAAD,iBAAiB7K,EAAjB,CAAwB6K,IAAKA,QAE/BY,YAAab,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAW7K,EAAX,CAAkB6K,IAAKA,QAC/Da,OAAQd,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAY7K,EAAZ,CAAmB6K,IAAKA,QAC3Dc,UAAWf,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAmB7K,EAAnB,CAA0B6K,IAAKA,QACrEe,gBAAiBhB,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAY7K,EAAZ,CAAmB6K,IAAKA,QACpEgB,WAAYjB,sBAAW,SAAC5K,EAAO6K,GAAR,OAAgB,kBAAC,KAAD,iBAAgB7K,EAAhB,CAAuB6K,IAAKA,SAG/D5D,GAAYvI,cAAW,SAAAC,GAAK,MAAK,CACrCkG,UAAW,CACTxF,QAAS,IAEXE,MAAO,CACLL,MAAOP,EAAMjF,QAAQE,QAAQC,MAE/BiS,MAAO,CACLzM,QAAS,GACTC,OAAQ,IAEVkI,KAAM,CACJtI,MAAO,SAET6M,MAAO,CACLC,aAAc,IAEhBC,MAAO,CACL3M,OAAQ,QA8EG4M,GA1EK,SAAC,GAMd,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,OACA9M,EAEI,EAFJA,MACA+M,EACI,EADJA,WAEMrM,EAAUgH,KAChB9C,QAAQC,IAAI,sBAAuBiI,GACnC,IAAME,EAAkBhN,EACpBA,EAAM,GAAGiN,cAAgBjN,EAAMkN,MAAM,GACrC,KAEEC,EAAUJ,EACZA,EAAW/O,KAAI,SAAAI,GACb,MAAO,CAAE4B,MAAO5B,EAAMgP,MAAOhP,MAE/B,KAEEiP,EAAO,GACbA,EAAK9P,OAASuP,EAASQ,OAAOC,KAAKT,GAAQvP,OAAS,EAClCwP,GACdO,OAAOC,KAAKT,GAAQ9O,KAAI,SAAAI,GAAI,OAC1B2O,EAAW/O,KACT,SAAA+J,GAAG,OAAKsF,EAAKjP,G,2VAAL,IAAkBiP,EAAKjP,GAAvB,eAA+B2J,EAAM+E,EAAO1O,GAAM2J,WA+BlE,OACE,kBAAC1C,GAAA,EAAD,CAAMjH,MAAI,EAACoH,GAAI,GACb,wBAAI7E,UAAWD,EAAQV,OAAQgN,GAC9BD,GACC,kBAAC,KAAD,CACE5J,MAAO,CAAEpD,OAAQ,IACjBC,MAAO6M,GAAgCG,EACvCQ,MAAOrC,GACPsC,SAAU,CACRC,SAAU,SAAAC,GAAO,OAAIf,EAAUe,EAAS3N,EAAO6M,KAEjDM,QAASA,EACTE,KAAMA,M,oBC3HV3F,GAAYvI,cAAW,SAAAC,GAAK,MAAK,CACrCwO,KAAM,CACJ3N,OAAQ,QAEVqF,UAAW,CACTrF,OAAQ,QAEVD,MAAO,CACLL,MAAOP,EAAMjF,QAAQE,QAAQC,MAE/B2N,KAAM,CACJE,SAAU,WACV,UAAW,CACT7I,gBAAiBF,EAAMjF,QAAQI,UAAUD,MAE3CgF,gBAAiBF,EAAMjF,QAAQI,UAAUD,KACzC,WAAY,CACVyB,QAAS,KACToM,SAAU,WACVC,KAAM,EACN7I,MAAO,EACPU,OAAQ,OACRX,gBAAiBF,EAAMjF,QAAQE,QAAQC,WAsE9BuT,GAjEC,SAAC,GAAgC,IAA9BvR,EAA6B,EAA7BA,SAAUwR,EAAmB,EAAnBA,aACrBpN,EAAUgH,KAD8B,EAEhB7F,IAAMkM,SAAS,MAFC,oBAEvCC,EAFuC,KAE7BC,EAF6B,KAIxCC,EAAc,SAACC,GAAgC,IAApB9P,EAAmB,uDAAT,KACrCA,GACF4P,EAAU5P,GACVyP,EAAa,WAAYzP,KAEzB4P,EAAUE,GACVL,EAAaK,KAIXC,EAAc9R,EAChBA,EAAS0B,KAAI,SAAAK,GACX,OACE,kBAACiK,GAAA,EAAD,CACEP,IAAK1J,EAAQJ,IACbyE,QAAM,EACNhC,QAAS,CACPsN,SAAUtN,EAAQuH,MAEpB+F,SAAUA,IAAa3P,EAAQ5B,KAC/ByG,QAAS,kBAAMgL,EAAY,WAAY7P,EAAQ5B,QAE/C,kBAAC8L,GAAA,EAAD,CAAclO,QAASgE,EAAQ5B,WAIrC,KAEJ,OACE,kBAAC4I,GAAA,EAAD,CAAM1E,UAAWD,EAAQkN,KAAMxP,MAAI,EAACoH,GAAI,GACtC,yBAAK7E,UAAWD,EAAQ4E,WACtB,wBAAI3E,UAAWD,EAAQV,OAAvB,eACA,kBAAC,KAAD,CAAMwJ,UAAU,MAAM6E,UAAW,8BAC/B,kBAAC/F,GAAA,EAAD,CACE5F,QAAM,EACNhC,QAAS,CACPsN,SAAUtN,EAAQuH,MAEpB/E,QAAS,kBAAMgL,EAAY,UAC3BF,SAAuB,UAAbA,GAEV,kBAACzF,GAAA,EAAD,CAAclO,QAAQ,WAExB,kBAACiO,GAAA,EAAD,CACE5F,QAAM,EACNhC,QAAS,CACPsN,SAAUtN,EAAQuH,MAEpB/E,QAAS,kBAAMgL,EAAY,aAC3BF,SAAuB,aAAbA,GAEV,kBAACzF,GAAA,EAAD,CAAclO,QAAQ,cAExB,kBAACiU,GAAA,EAAD,iBACCF,MCnFLG,G,YACJ,WAAY9N,GAAQ,IAAD,+BACjB,8CAAMA,KA8BRqN,aAAe,SAACK,GAAoC,IAE9CpB,EAAYyB,EAFUC,EAAuB,uDAAT,KAGxC,OAFA7J,QAAQC,IAAIsJ,GAEJA,GACN,IAAK,WACHpB,EAAa,CAAC,MAAO,QAAS,eAC9ByB,EAAmB,EAAK3R,MAAM6R,SAC9B,MACF,IAAK,QACH3B,EAAa,CAAC,MAAO,QAAS,UAC9ByB,EAAmB,EAAK3R,MAAM8R,MAC9B,MACF,IAAK,WACH5B,EAAa,CAAC,MAAO,QAAS,QAC9BnI,QAAQC,IAAI,EAAKhI,MAAMP,SAAUmS,GACjCD,EAAmB,EAAK3R,MAAMP,SAAS6B,QACrC,SAAAE,GAAO,OAAIA,EAAQ5B,OAASgS,KAC5B,GAAG3R,MAKT,EAAKkH,SAAS,CACZwK,iBAAkBA,EAClBI,eAAgBT,EAChBU,iBAAkB9B,EAClB+B,cAAeL,KAzDA,EA6DnB7B,UAAY,SAACuB,EAAYnO,GAA2B,IAApB3B,EAAmB,uDAAT,KACpCA,GAGFmI,MAAM,EAAK3J,MAAM2K,IAAM,WAAY,CACjCf,KAAM,OACNO,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,OAAQ,UArEZ,EAAKrK,MAAQ,CACXP,SAAU,KACVqS,MAAO,KACPD,SAAU,KACVF,iBAAkB,KAClBI,eAAgB,KAChBC,iBAAkB,KAClBC,cAAe,KACftH,IAAK,0BAVU,E,mFAcE,IAAD,OAClBhB,MAAM/E,KAAK5E,MAAM2K,IAAM,YACpBd,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApK,GAAQ,OACZ,EAAK0H,SAAS,CACZ1H,SAAUA,OAIhBkK,MAAM/E,KAAK5E,MAAM2K,IAAM,YACpBd,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAgI,GAAQ,OACZ,EAAK1K,SAAS,CACZ0K,SAAUA,S,+BAgDR,IACAhO,EAAYe,KAAKhB,MAAjBC,QACR,OACE,kBAAC2E,GAAA,EAAD,CAAMC,WAAS,EAAC3E,UAAWD,EAAQkN,KAAMrI,QAAS,GAChD,kBAAC,GAAD,CACEjJ,SAAUmF,KAAK5E,MAAMP,SACrBwR,aAAcrM,KAAKqM,eAErB,kBAACiB,GAAD,CACEjC,OAAQrL,KAAK5E,MAAM2R,iBACnBxO,MAAOyB,KAAK5E,MAAM+R,eAClB7B,WAAYtL,KAAK5E,MAAMgS,iBACvBhC,cAAepL,KAAK5E,MAAMiS,cAC1BlC,UAAWnL,KAAKmL,iB,GAzFN/K,IAAMC,WAgGX8H,iBAtGA,SAAAxK,GAAK,MAAK,CACvBwO,KAAM,CACJ3N,OAAQ,WAoGG2J,CAAmB2E,IClGnBS,GARI,WACjB,OACE,6BACE,4CCUAtH,GAAYvI,cAAW,SAAAC,GAAK,MAAK,CACrCkK,WAAY,CACVrJ,OAAQ,OACRgP,YAAa,IAEfC,QAAS,CACPC,UAAW,OACX1C,cAAe,GACfnN,gBAAiB,SAEnB8P,KAAM,CACJnP,OAAQ,IAEVoP,OAAQ,CACNpP,OAAQ,GACRX,gBAAiBF,EAAMjF,QAAQE,QAAQC,MAEzC,UAAW,CACTgV,KAAM,CACJhQ,gBAAiBF,EAAMjF,QAAQE,QAAQC,OAG3CiV,OAAQ,CACNtP,OAAQ,YA0BGuP,GAtBA,WACb,IAAM9O,EAAUgH,KAChB,OACE,oCACE,yBAAK/G,UAAWD,EAAQwO,SACtB,kBAAC,GAAD,MACA,kBAAC,KAAD,CAAQvO,UAAWD,EAAQ6O,QACzB,kBAAC,GAAD,CAAME,KAAK,MACX,kBAAC,GAAD,CAAOA,KAAK,UACZ,kBAAC,GAAD,CAAUA,KAAK,aACf,kBAAC,GAAD,CAASA,KAAK,YACd,kBAAC,GAAD,CAAMC,UAAWhP,EAAQ4I,WAAYmG,KAAK,SAC1C,kBAAC,GAAD,CAAOA,KAAK,UACZ,kBAAC,GAAD,CAAYA,KAAK,iBAEnB,yBAAK9O,UAAWD,EAAQ0O,QAE1B,yBAAKzO,UAAWD,EAAQ2O,WAOxB7N,GAAO,SAAC,GAAD,IAAGkO,EAAH,EAAGA,UAAH,OACX,oCACE,kBAACrK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGoK,QAAQ,UAClC,kBAACtK,GAAA,EAAD,CAAMjH,MAAI,EAACuC,UAAW+O,GACpB,kBAAC,GAAD,OAEF,kBAACrK,GAAA,EAAD,CAAMjH,MAAI,GACR,kBAAC,GAAD,MACA,kBAAC,GAAD,UClEFwR,GAAQ3Q,KAYC4Q,OAVf,WACE,OACE,kBAAC,IAAD,CAAUD,MAAOA,IACf,kBAACE,EAAA,EAAD,CAAe1Q,MAAOnF,GACpB,kBAAC,GAAD,SCFY8V,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASnH,SAASoH,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/J,MAAK,SAAAgK,GACjCA,EAAaC,kB","file":"static/js/main.4d386c69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.422cba5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/lucas.eaba7ec4.png\";","module.exports = __webpack_public_path__ + \"static/media/RDJ.fdf7012b.png\";","module.exports = __webpack_public_path__ + \"static/media/student.673c0200.png\";","module.exports = __webpack_public_path__ + \"static/media/einstien.1ca36c16.png\";","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst TestMasterTheme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: { main: \"rgb(88, 118, 168)\" },\n    secondary: { main: \"#f5f5f5\" }\n  }\n});\n\nexport default TestMasterTheme;\n","export const NEXT_CARD = \"card/NEXT_CARD\";\nexport const PREV_CARD = \"card/PREV_CARD\";\nexport const SET_CARDS = \"card/SET_CARDS\";\nexport const ADD_CARD = \"card/ADD_CARD\";\nexport const UPDATE_CARD = \"card/UPDATE_CARD\";\nexport const SWAP_SIDES = \"card/SWAP_SIDES\";\nexport const DELETE_CARD_ITEM = \"card/DELETE_CARD_ITEM\";\nexport const GET_CARDSETS = \"card/GET_CARDSETS\";\nexport const SET_ALL_CARDSETS = \"card/SET_ALL_CARDSETS\";\nexport const ADD_CARDSET = \"cardset/ADD_CARDSET\";\nexport const DELETE_CARDSET = \"cardset/DELETE_CARDSET\";\nexport const EDIT_CARDSET = \"cardset/EDIT_COURSE\";\nexport const FLIP_CARD = \"card/FLIP_CARD\"\n","import * as types from \"./types\";\n\nexport function setCards(card) {\n  return {\n    type: types.SET_CARDS,\n    payload: card\n  };\n}\n\nexport function nextCard() {\n  return {\n    type: types.NEXT_CARD\n  };\n}\n\nexport function prevCard() {\n  return {\n    type: types.PREV_CARD\n  };\n}\n\nexport function addCard(newCard) {\n  return {\n    type: types.ADD_CARD,\n    payload: newCard\n  };\n}\n\nexport function updateCard(card, side, content) {\n  return {\n    type: types.UPDATE_CARD,\n    payload: { card: card, side: side, content: content }\n  };\n}\n\nexport function deleteCardItem(itemId) {\n  return {\n    type: types.DELETE_CARD_ITEM,\n    payload: itemId\n  };\n}\nexport function swapSides(itemId, front, back) {\n  return {\n    type: types.SWAP_SIDES,\n    payload: { itemId: itemId, front: front, back: back }\n  };\n}\n\nexport function getCardsets(cardsets) {\n  return {\n    type: types.GET_CARDSETS,\n    payload: cardsets\n  };\n}\n\nexport function setAllCardsets(cardsets) {\n  return {\n    type: types.SET_ALL_CARDSETS,\n    payload: cardsets\n  };\n}\n\nexport function addCardset(name, cardsets) {\n  return {\n    type: types.ADD_CARDSET,\n    payload: [name, cardsets]\n  };\n}\n\nexport function deleteCardset(name) {\n  return {\n    type: types.DELETE_CARDSET,\n    payload: name\n  };\n}\n\nexport function flipCard() {\n  return {\n    type: types.FLIP_CARD\n  };\n}\n","import { createSelector } from \"reselect\";\n\nexport const getCards = state => state.cards;\nexport const getCurrentCard = state => state.currentCard;\nexport const getCurrentCardSet = state => state.currentCardSet;\nexport const getCardsetNames = state => state.allCardSets;\n\nexport const getNumberOfCards = createSelector(\n  [getCards, getCurrentCardSet],\n  (cards, currentCardSet) => {\n    if (currentCardSet) {\n      return cards[currentCardSet].cards.length;\n    } else {\n      return null;\n    }\n  }\n);\n\nexport const getCurrentCardSetArray = createSelector(\n  [getCards, getCurrentCardSet],\n  (cards, currentCardSet) => {\n    if (currentCardSet) {\n      return cards[currentCardSet].cards;\n    } else {\n      return null;\n    }\n  }\n);\n","import * as select from \"./selectors\";\n\nexport const setCards = (state, action) => {\n  return {\n    ...state,\n    currentCard: 0,\n    currentCardSet: action.payload\n  };\n};\n\nexport const nextCard = (state, action) => {\n  const cardSetLength = select.getNumberOfCards(state);\n  const nextTemp = state.currentCard + 1;\n  const next = nextTemp > cardSetLength - 1 ? 0 : nextTemp;\n  return {\n    ...state,\n    currentCard: next\n  };\n};\n\nexport const prevCard = (state, action) => {\n  const cardSetLength = select.getNumberOfCards(state);\n  const prevTemp = state.currentCard - 1;\n  const prev = prevTemp < 0 ? cardSetLength - 1 : prevTemp;\n  return {\n    ...state,\n    currentCard: prev\n  };\n};\n\nexport const addCard = (state, action) => {\n  const currentCardSet = select.getCurrentCardSet(state);\n\n  return {\n    ...state,\n    cards: {\n      ...state.cards,\n      [currentCardSet]: {\n        ...state.cards[currentCardSet],\n        cards: state.cards[currentCardSet].cards.concat(action.payload)\n      }\n    }\n  };\n};\n\nexport const updateCard = (state, action) => {\n  const currentCardSet = select.getCurrentCardSet(state);\n  const currentCard = select.getCurrentCard(state);\n  const currentCardsSetArray = select.getCurrentCardSetArray(state);\n  if (currentCardSet === null) {\n    return state;\n  }\n  const updatedCardSet = state.cards[currentCardSet].cards.map(card =>\n    card._id === action.card ? { ...card, [action.side]: action.content } : card\n  );\n  //check is card getting updated is the current card\n  return {\n    ...state,\n    cards: {\n      ...state.cards,\n      [currentCardSet]: {\n        ...state.cards[currentCardSet],\n        cards: updatedCardSet\n      }\n    }\n  };\n};\n\nexport const deleteCardItem = (state, action) => {\n  const currentCardSet = select.getCurrentCardSet(state);\n  if (currentCardSet === null) {\n    return state;\n  }\n  const newCards = state.cards[currentCardSet].cards.filter(\n    item => item._id !== action.payload\n  );\n  return {\n    ...state,\n    cards: {\n      ...state.cards,\n      [currentCardSet]: {\n        ...state.cards[currentCardSet],\n        cards: newCards\n      }\n    }\n  };\n};\n\nexport const swapSides = (state, action) => {\n  const currentCardSet = select.getCurrentCardSet(state);\n  if (currentCardSet === null) {\n    return state;\n  }\n\n  const updatedCardSet = state.cards[currentCardSet].cards.map(card =>\n    card._id === action.itemId\n      ? { ...card, front: action.back, back: action.front }\n      : card\n  );\n  return {\n    ...state,\n    cards: {\n      ...state.cards,\n      [currentCardSet]: {\n        ...state.cards[currentCardSet],\n        cards: updatedCardSet\n      }\n    }\n  };\n};\n\nexport const deleteCardset = (state, action) => {\n  const { [action.payload.name]: deleted, ...updateCardsets } = state.cards;\n\n  return {\n    ...state,\n    cards: updateCardsets,\n    currentCardSet: null,\n    allCardSets: state.allCardSets.filter(\n      cardset => cardset !== action.payload.name\n    )\n  };\n};\n","import * as types from \"./types\";\nimport * as ops from \"./operations\";\n\nexport const initialState = {\n  currentCard: null,\n  currentCardSet: null,\n  cards: {},\n  allCardSets: [],\n  flipped: false\n};\n\nexport function card(state = initialState, action) {\n  switch (action.type) {\n    case types.SET_CARDS:\n      return ops.setCards(state, action);\n    case types.NEXT_CARD:\n      return ops.nextCard(state);\n    case types.PREV_CARD:\n      return ops.prevCard(state);\n    case types.ADD_CARD:\n      return ops.addCard(state, action);\n    case types.UPDATE_CARD:\n      return ops.updateCard(state, action.payload);\n    case types.SWAP_SIDES:\n      return ops.swapSides(state, action.payload);\n    case types.DELETE_CARD_ITEM:\n      return ops.deleteCardItem(state, action);\n    case types.SET_ALL_CARDSETS:\n      return {\n        ...state,\n        allCardSets: action.payload\n      };\n    case types.GET_CARDSETS:\n      return {\n        ...state,\n        cards: action.payload\n      };\n    case types.ADD_CARDSET:\n      return {\n        ...state,\n        currentCardSet: action.payload[0],\n        currentCard: 0,\n        allCardSets: state.allCardSets.concat(action.payload[0]),\n        cards: {\n          ...state.cards,\n          [action.payload[0]]: action.payload[1]\n        }\n      };\n    case types.DELETE_CARDSET:\n      return ops.deleteCardset(state, action);\n    case types.EDIT_CARDSET:\n      return {\n        ...state,\n        currentCardSet: action.payload,\n        allCardSets: state.allCardSets.map(cardset =>\n          cardset === action.payload[0] ? action.payload[1] : cardset\n        )\n      };\n    case types.FLIP_CARD:\n      return {\n        ...state,\n        flipped: !state.flipped\n      };\n    default:\n      return state;\n  }\n}\n\nexport default card;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport card from \"../card/ducks\";\n\nconst loggerMiddleware = createLogger(); // initialize logger\n\nconst createStoreWithMiddleware = applyMiddleware(loggerMiddleware, thunk)(\n  createStore\n); // apply logger to redux\n\nconst reducer = combineReducers({\n  card\n});\n\nconst storeConfig = initialState =>\n  createStoreWithMiddleware(reducer, initialState);\nexport default storeConfig;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Link } from \"@reach/router\";\nimport Logo from \"../assets/logo.svg\";\n\nconst userStyles = makeStyles(theme => ({\n  headerContainer: {\n    backgroundColor: theme.palette.primary.main,\n    width: \"100%\"\n  },\n  logo: {\n    float: \"left\",\n    fontSize: 25,\n    color: theme.palette.secondary.main\n  },\n  headerLayout: {\n    display: \"flex\",\n    padding: \"10px 0\",\n    margin: \"auto\",\n    width: \"80%\"\n  },\n  title: {\n    width: \"40%\",\n    margin: \"auto\",\n    height: \"100%\"\n  },\n  navigation: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    width: \"60%\",\n    \"&> a\": {\n      textDecoration: \"none\"\n    }\n  },\n  navItem: {\n    color: theme.palette.secondary.main,\n    padding: \"10px 15px\",\n    margin: \"0 10px\",\n    border: `2px ${theme.palette.secondary.main} solid`,\n    borderRadius: 4\n  }\n}));\n\nconst Header = props => {\n  const classes = userStyles();\n  return (\n    <div className={classes.headerContainer}>\n      <div className={classes.headerLayout}>\n        <div className={classes.title}>\n          <div className={classes.logo}>\n            <img src={Logo} alt=\"Test Master Logo\" />\n          </div>\n        </div>\n        <div className={classes.navigation}>\n          <Link to=\"/\">\n            <div className={classes.navItem}>Home</div>\n          </Link>\n          <Link to=\"services\">\n            <div className={classes.navItem}>Services</div>\n          </Link>\n          <Link to=\"about\">\n            <div className={classes.navItem}>About</div>\n          </Link>\n          <Link to=\"contact\">\n            <div className={classes.navItem}>Contact</div>\n          </Link>\n          {props.user ? (\n            <Link to=\"profile\">\n              <div className={classes.navItem}>Profile</div>\n            </Link>\n          ) : (\n            <Link to=\"card\">\n              <div className={classes.navItem}>Login</div>\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LayoutContainter = styled.div`\n  width: 100%;\n`;\n\nconst Layout = props => {\n  return <LayoutContainter>{props.children}</LayoutContainter>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Content = styled.div`\n  color: black;\n  width: 500px;\n  padding: 140px 0;\n  text-align: center;\n  height: 100%;\n`;\n\nconst Counter = styled.div`\n  position: absolute;\n  right: 0;\n  padding: 10px;\n  color: gray;\n`;\n\nclass Card extends React.Component {\n  render() {\n    const { cardSet, side, current, total } = this.props;\n    return (\n      <div>\n        {cardSet && (\n          <Counter>\n            {current}/{total}\n          </Counter>\n        )}\n        <Content>{side}</Content>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","// React and others\nimport React, { useState } from \"react\";\nimport { useSpring, animated as a } from \"react-spring\";\n// Styles and Props\nimport styled from \"styled-components\";\nimport \"./Card.scss\";\n// Material-ui\nimport { Paper } from \"@material-ui/core\";\n// Custom Components\nimport Layout from \"../common/Layout\";\nimport Card from \"./Card\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { CardActions, CardSelectors } from \"./ducks\";\n\nconst mapStateToProps = ({ card }) => ({\n  card,\n  currentCard: CardSelectors.getCurrentCard(card),\n  currentCardSet: CardSelectors.getCurrentCardSet(card),\n  numberOfCards: CardSelectors.getNumberOfCards(card),\n  currentCardSetArray: CardSelectors.getCurrentCardSetArray(card)\n});\n\nconst actions = {\n  nextCard: CardActions.nextCard,\n  prevCard: CardActions.prevCard,\n  flipCard: CardActions.flipCard\n};\n\nconst enhance = compose(\n  connect(\n    mapStateToProps,\n    actions\n  )\n);\n\nconst Container = styled.div`\n  margin: 15px auto;\n  position: relative;\n  width: 500px;\n  height: 300px;\n  justify-content: center;\n`;\n\nconst CardButtons = styled.div`\n  margin: auto;\n  width: fit-content;\n`;\n\nconst CardButton = styled.button`\n  margin: 0 5px;\n  padding: 10px 15px;\n  text-transform: uppercase;\n  background-color: white;\n  border-radius: 5px;\n  font-size: 15px;\n  transition: 0.2s;\n  :focus {\n    outline: none;\n  }\n  :active {\n    border-style: solid;\n  }\n  :hover {\n    background-color: rgb(88, 118, 168);\n    color: white;\n    border-color: white;\n  }\n`;\n\nfunction CardContainer(props) {\n  const { transform, opacity } = useSpring({\n    opacity: props.card.flipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${props.card.flipped ? 180 : 0}deg)`,\n    config: { mass: 5, tension: 500, friction: 80 }\n  });\n\n  return (\n    <Layout>\n      {props.currentCardSet && (\n        <>\n          <Container onClick={props.flipCard}>\n            <a.div\n              className=\"flip\"\n              style={{ opacity: opacity.interpolate(o => 1 - o), transform }}\n            >\n              <Paper className=\"paper\">\n                <Card\n                  cardSet={props.currentCardSet}\n                  total={props.numberOfCards}\n                  current={props.currentCard + 1}\n                  side={props.currentCardSetArray[props.currentCard].front}\n                />\n              </Paper>\n            </a.div>\n\n            <a.div\n              className=\"flip\"\n              style={{\n                opacity,\n                transform: transform.interpolate(t => `${t} rotateX(180deg)`)\n              }}\n            >\n              <Paper className=\"paper\">\n                <Card\n                  cardSet={props.currentCardSet}\n                  total={props.numberOfCards}\n                  current={props.currentCard + 1}\n                  side={props.currentCardSetArray[props.currentCard].back}\n                />\n              </Paper>\n            </a.div>\n          </Container>\n\n          <CardButtons>\n            {props.currentCardSet && (\n              <>\n                <CardButton className=\"btn\" onClick={() => props.prevCard()}>\n                  Previous\n                </CardButton>\n                <CardButton className=\"btn\" onClick={() => props.nextCard()}>\n                  Next\n                </CardButton>\n              </>\n            )}\n          </CardButtons>\n        </>\n      )}\n    </Layout>\n  );\n}\n\nexport default enhance(CardContainer);\n","import React from \"react\";\nimport \"./List.scss\";\nimport styled from \"styled-components\";\nimport { DeleteOutline, InfoOutlined, SwapHoriz } from \"@material-ui/icons\";\nimport { Paper, Grid, TextField, IconButton, Zoom } from \"@material-ui/core\";\n\nconst ButtonContainer = styled(Paper)`\n  position: absolute !important;\n  right: 12px;\n  top: 5px;\n`;\n\nconst DeleteButton = styled(IconButton)`\n  background-color: transparent;\n  padding: 1px !important;\n`;\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      front: this.props.front,\n      back: this.props.back,\n      deletedItem: null\n    };\n    this.timeout = null;\n  }\n\n  handleFront = event => {\n    clearTimeout(this.timeout);\n    this.setState({\n      front: event.target.value\n    });\n    this.timeout = setTimeout(() => {\n      const { id } = this.props;\n      this.props.update(id, \"front\", this.state.front);\n    }, 1000);\n  };\n\n  swapItems = (id, front, back) => {\n    this.setState({\n      front: this.state.back,\n      back: this.state.front\n    });\n    this.props.swap(id, front, back);\n  };\n  handleDelete = id => {\n    this.setState({\n      deletedItem: this.props.id\n    });\n\n    setTimeout(() => {\n      this.props.delete(id);\n    }, 500);\n  };\n\n  handleBack = event => {\n    clearTimeout(this.timeout);\n    this.setState({\n      back: event.target.value\n    });\n    this.timeout = setTimeout(() => {\n      const { id } = this.props;\n      this.props.update(id, \"back\", this.state.back);\n    }, 1000);\n  };\n\n  render() {\n    const { front, back } = this.state;\n    console.log(\"LIST REDRAWN\");\n    return (\n      <>\n        <Zoom\n          style={{ transformOrigin: \"top\" }}\n          timeout={{ enter: 0, exit: 300 }}\n          mountOnEnter\n          unmountOnExit\n          in={this.state.deletedItem !== this.props.id}\n        >\n          <Grid container spacing={3} className=\"list-item\">\n            <Grid item xs>\n              <TextField\n                fullWidth\n                multiline\n                rowsMax=\"4\"\n                id=\"front\"\n                label=\"front\"\n                onChange={this.handleFront}\n                value={front}\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                multiline\n                rowsMax=\"4\"\n                id=\"back\"\n                label=\"back\"\n                onChange={this.handleBack}\n                value={back}\n              />\n            </Grid>\n            <ButtonContainer>\n              <DeleteButton\n                onClick={() => this.swapItems(this.props.id, front, back)}\n              >\n                <SwapHoriz fontSize=\"small\" />\n              </DeleteButton>\n              <DeleteButton>\n                <InfoOutlined fontSize=\"small\" />\n              </DeleteButton>\n              <DeleteButton onClick={() => this.handleDelete(this.props.id)}>\n                <DeleteOutline fontSize=\"small\" />\n              </DeleteButton>\n            </ButtonContainer>\n          </Grid>\n        </Zoom>\n      </>\n    );\n  }\n}\n\nexport default List;\n","export const FETCH_USERS_PENDING = \"api/FETCH_USERS_PENDING\";\nexport const FETCH_USERS_SUCCESS = \"api/FETCH_USERS_PENDING\";\nexport const FETCH_USERS_ERROR = \"api/FETCH_USERS_ERROR\";\n\nexport const FETCH_CARDS_PENDING = \"api/FETCH_CARDS_PENDING\";\nexport const FETCH_CARDS_SUCCESS = \"api/FETCH_CARDS_PENDING\";\nexport const FETCH_CARDS_ERROR = \"api/FETCH_CARDS_ERROR\";\n\nexport const FETCH_COURSE_PENDING = \"api/FETCH_COURSE_PENDING\";\nexport const FETCH_COURSE_SUCCESS = \"api/FETCH_COURSE_PENDING\";\nexport const FETCH_COURSE_ERROR = \"api/FETCH_COURSE_ERROR\";\n","import * as actions from \"./actions\";\nimport { CardActions } from \"../card/ducks\";\n\nvar base_url =\n  process.env.NODE_ENV === \"production\"\n    ? \"http://testmasterlive.com:4000\"\n    : \"http://localhost:4000\";\n\nexport const fetchCards = () => {\n  return dispatch => {\n    dispatch(actions.fetchCardsPending());\n    fetch(base_url + \"/cardsets\", {\n      mode: \"cors\"\n    })\n      .then(res => res.json())\n      .then(cardsets => {\n        if (cardsets.error) {\n          throw cardsets.error;\n        }\n        let cards = {};\n        cardsets.map(\n          cardset =>\n            (cards[cardset.name] = {\n              id: cardset._id,\n              cards: cardset.cards\n            })\n        );\n        dispatch(actions.fetchCardsSuccess());\n        dispatch(CardActions.getCardsets(cards));\n        dispatch(\n          CardActions.setAllCardsets(cardsets.map(cardset => cardset.name))\n        );\n        return cardsets;\n      })\n      .catch(error => {\n        dispatch(actions.fetchCardsError(error));\n      });\n  };\n};\n\nexport const addCard = currentCardSet => {\n  const newCard = { card: { front: \"\", back: \"\" } };\n  const url = base_url + \"/cardsets/\";\n\n  return dispatch => {\n    fetch(url + currentCardSet.id, {\n      mode: \"cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(newCard)\n    })\n      .then(res => res.json())\n      .then(cardset => {\n        dispatch(CardActions.addCard(cardset.cards[cardset.cards.length - 1]));\n      });\n  };\n};\n\nexport const deleteCard = (currentCardSet, cardId) => {\n  return dispatch => {\n    const url = base_url + \"/cardsets/\" + currentCardSet.id + \"/\" + cardId;\n    const body = { delete: \"delete\" };\n    fetch(url, {\n      mode: \"cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"put\",\n      body: JSON.stringify(body)\n    }).then(dispatch(CardActions.deleteCardItem(cardId)));\n  };\n};\n\nexport const updateCard = (cardsetId, cardId, side, content) => {\n  return dispatch => {\n    const url = base_url + \"/cardsets/\" + cardsetId + \"/\" + cardId;\n\n    const body = { card: { [side]: content } };\n\n    fetch(url, {\n      mode: \"cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"put\",\n      body: JSON.stringify(body)\n    }).then(dispatch(CardActions.updateCard(cardId, side, content)));\n  };\n};\n\nexport const addCardset = name => {\n  return dispatch => {\n    const url = base_url + \"/cardsets\";\n\n    const body = { name: name };\n\n    fetch(url, {\n      mode: \"cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(cardset =>\n        dispatch(\n          CardActions.addCardset(name, {\n            id: cardset._id,\n            cards: cardset.cards\n          })\n        )\n      )\n      .catch(err => console.log(err));\n  };\n};\n\nexport const deleteCardset = cardsetId => {\n  return dispatch => {\n    const url = base_url + \"/cardsets/\" + cardsetId;\n\n    fetch(url, {\n      mode: \"cors\",\n      method: \"delete\"\n    })\n      .then(res => res.json())\n      .then(cardset => dispatch(CardActions.deleteCardset(cardset)))\n      .catch(err => console.log(err));\n  };\n};\n","import * as types from \"./types\";\n\nexport function fetchCardsPending() {\n  return {\n    type: types.FETCH_CARDS_PENDING\n  };\n}\n\nexport function fetchCardsSuccess(cards) {\n  return {\n    type: types.FETCH_CARDS_SUCCESS,\n    cards: cards\n  };\n}\n\nexport function fetchCardsError(error) {\n  return {\n    type: types.FETCH_CARDS_ERROR,\n    error: error\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Paper, IconButton } from \"@material-ui/core\";\nimport \"./List.scss\";\nimport List from \"./List\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { CardSelectors, CardActions } from \"../card/ducks\";\nimport { addCard, deleteCard, updateCard } from \"../api/operations\";\nimport { AddBox } from \"@material-ui/icons\";\n\nconst mapStateToProps = ({ card }) => ({\n  card,\n  currentCard: CardSelectors.getCurrentCard(card),\n  currentCardsSetArray: CardSelectors.getCurrentCardSetArray(card),\n  currentCardSet: CardSelectors.getCurrentCardSet(card)\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addCard: currentCardSet => dispatch(addCard(currentCardSet)),\n    updateCard: (cardsetId, cardId, side, content) =>\n      dispatch(updateCard(cardsetId, cardId, side, content)),\n    deleteCard: (currentCardSet, id) => {\n      dispatch(deleteCard(currentCardSet, id));\n    },\n    swapSides: (id, front, back) =>\n      dispatch(CardActions.swapSides(id, front, back))\n  };\n};\n\nconst enhance = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n);\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: \"auto\",\n    width: 800,\n    padding: \"15px 0\"\n  },\n  addContainer: {\n    display: \"flex\",\n    paddingTop: \"inherit\"\n  }\n}));\n\nfunction ListContainer(props) {\n  console.log(\"LIST CONTAINER REDRAWN \", props.currentCardsSetArray);\n\n  const deleteCardItem = id => {\n    props.deleteCard(props.card.cards[props.currentCardSet], id);\n  };\n\n  const updateCardItem = (cardId, side, content) => {\n    props.updateCard(\n      props.card.cards[props.currentCardSet].id,\n      cardId,\n      side,\n      content\n    );\n  };\n\n  const ItemList = props.currentCardSet\n    ? props.currentCardsSetArray.map(card => {\n        return (\n          <List\n            key={card._id}\n            id={card._id}\n            front={card.front}\n            back={card.back}\n            update={updateCardItem}\n            delete={deleteCardItem}\n            swap={props.swapSides}\n          />\n        );\n      })\n    : null;\n\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      {props.currentCardSet ? (\n        <Paper className=\"list-paper\">\n          {ItemList}\n          <div className={classes.addContainer}>\n            <IconButton\n              className=\"list-plus\"\n              onClick={() =>\n                props.addCard(props.card.cards[props.currentCardSet])\n              }\n            >\n              <AddBox />\n            </IconButton>\n          </div>\n        </Paper>\n      ) : null}\n    </div>\n  );\n}\n\nexport default enhance(ListContainer);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n  list: active => ({\n    position: \"relative\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.main\n    },\n    backgroundColor: active ? theme.palette.secondary.main : \"white\",\n    \"&:before\": {\n      content: \"''\",\n      position: \"absolute\",\n      left: 0,\n      width: 5,\n      height: \"100%\",\n      backgroundColor: active ? theme.palette.primary.main : \"rgba(0,0,0,0)\"\n    }\n  }),\n  button: active => ({\n    \"& button\": {\n      display: active ? \"block\" : \"none\",\n      \"&:hover\": {\n        color: theme.palette.primary.main,\n        backgroundColor: \"rgba(0,0,0,0)\"\n      }\n    }\n  })\n}));\n\nconst Course = ({ deleteCardset, onClick, primary, active }) => {\n  const classes = useStyles(active);\n  return (\n    <ListItem className={classes.list} button onClick={onClick}>\n      <ListItemText primary={primary} />\n      <ListItemSecondaryAction className={classes.button}>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={deleteCardset}>\n          <DeleteOutlinedIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default Course;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Course from \"./Course\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { fetchCards, addCardset, deleteCardset } from \"../api/operations\";\nimport { CardSelectors, CardActions } from \"../card/ducks\";\nimport { AddBox } from \"@material-ui/icons\";\nimport { IconButton, TextField, ListItem } from \"@material-ui/core\";\n\nconst mapStateToProps = ({ card }) => ({\n  cards: CardSelectors.getCards(card),\n  cardsets: CardSelectors.getCardsetNames(card),\n  currentCardSet: CardSelectors.getCurrentCardSet(card)\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCardSets: () => dispatch(fetchCards()),\n    addCardset: name => dispatch(addCardset(name)),\n    setCards: name => dispatch(CardActions.setCards(name)),\n    deleteCardset: cardsetId => dispatch(deleteCardset(cardsetId)),\n    nextCard: () => dispatch(CardActions.nextCard()),\n    prevCard: () => dispatch(CardActions.prevCard()),\n    flipCard: () => dispatch(CardActions.flipCard())\n  };\n};\n\nconst enhance = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n);\n\nconst styles = theme => ({\n  courseList: {\n    width: \"100%\",\n    maxWidth: 360\n  },\n  courseHeader: {\n    color: theme.palette.primary.main,\n    marginBlockEnd: 0\n  },\n  addContainer: {\n    display: \"flex\",\n    paddingTop: \"inherit\"\n  },\n  plus: {\n    margin: \"auto !important\"\n  }\n});\n\nclass CourseContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showInput: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCardSets();\n    document.addEventListener(\"keyup\", this.handleKeyUp, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keyup\", this.handleKeyUp, false);\n  }\n\n  handleKeyUp = event => {\n    console.log(\"key\", event.keyCode);\n    switch (event.keyCode) {\n      case 32:\n        this.props.flipCard();\n        break;\n      case 39:\n        this.props.nextCard();\n        break;\n      case 37:\n        this.props.prevCard();\n        break;\n      default:\n        break;\n    }\n  };\n\n  preAddCardset() {\n    console.log(\"test\");\n    this.setState({\n      showInput: true\n    });\n  }\n  handleEnter = event => {\n    if (event.key === \"Enter\") {\n      this.props.addCardset(event.target.value);\n      this.setState({\n        showInput: false\n      });\n    }\n  };\n\n  deleteCardset = () => {\n    const { currentCardSet, cards } = this.props;\n    this.props.deleteCardset(cards[currentCardSet].id);\n  };\n\n  render() {\n    const { classes } = this.props;\n    console.log(this.props.currentCardSet);\n    const courses =\n      this.props.cardsets.length > 1\n        ? this.props.cardsets.map(cardset => {\n            return (\n              <Course\n                key={cardset}\n                onClick={() => this.props.setCards(cardset)}\n                primary={cardset}\n                active={cardset === this.props.currentCardSet}\n                deleteCardset={this.deleteCardset}\n              />\n            );\n          })\n        : null;\n    return (\n      <div className={classes.courseList}>\n        <h2 className={classes.courseHeader}>Courses</h2>\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n          {courses}\n          {this.state.showInput && (\n            <ListItem>\n              <TextField onKeyPress={this.handleEnter} />\n            </ListItem>\n          )}\n        </List>\n\n        <div className={classes.addContainer}>\n          <IconButton\n            className={classes.plus}\n            onClick={() => this.preAddCardset()}\n          >\n            <AddBox />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(enhance(CourseContainer));\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport study1 from \"../assets/lucas.png\";\nimport study2 from \"../assets/RDJ.png\";\nimport study3 from \"../assets/student.png\";\nimport study5 from \"../assets/einstien.png\";\n\nconst userStyles = makeStyles(theme => ({\n  container: {\n    width: \"auto\",\n    padding: 50,\n    margin: \"auto\",\n    backgroundColor: theme.palette.primary.main\n  },\n  slider: {\n    margin: \"auto\"\n  },\n  img: {\n    width: \"auto\"\n  }\n}));\n\nconst Home = () => {\n  var settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    arrows: false\n  };\n  const classes = userStyles();\n  const list = [study1, study2, study3, study5].map((study, index) => {\n    return (\n      <div key={index} className={classes.container}>\n        <img className={classes.img} src={study} alt={`study${index}`} />\n      </div>\n    );\n  });\n  return (\n    <div>\n      <h2>Home</h2>\n      <Slider className={classes.slider} {...settings}>\n        {list}\n      </Slider>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Services = () => {\n  return (\n    <div>\n      <h2>Services</h2>\n    </div>\n  );\n};\n\nexport default Services;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <div>\n      <h2>Contact</h2>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React, { forwardRef } from \"react\";\nimport { Grid, Paper, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: 15\n  },\n  title: {\n    color: theme.palette.primary.main\n  },\n  paper: {\n    padding: 15,\n    margin: 20\n  },\n  list: {\n    color: \"black\"\n  },\n  input: {\n    marginBottom: 15\n  },\n  table: {\n    margin: 20\n  }\n}));\n\nconst Collections = ({\n  handleAdd,\n  cardsetChosen,\n  chosen,\n  title,\n  serializer\n}) => {\n  const classes = useStyles();\n  console.log(\"COLLECTIONS REDRAWN\", chosen);\n  const collectionTitle = title\n    ? title[0].toUpperCase() + title.slice(1)\n    : null;\n\n  const columns = serializer\n    ? serializer.map(item => {\n        return { title: item, field: item };\n      })\n    : null;\n\n  const data = [];\n  data.length = chosen ? Object.keys(chosen).length : 0;\n  const iteration = serializer\n    ? Object.keys(chosen).map(item =>\n        serializer.map(\n          key => (data[item] = { ...data[item], [key]: chosen[item][key] })\n        )\n      )\n    : null;\n\n  /*const chosenList = chosen\n    ? Object.keys(chosen).map(item => {\n        return (\n          <Paper key={item} className={classes.paper}>\n            {Object.keys(chosen[item]).map(key => {\n              return (\n                <>\n                  <TextField\n                    className={classes.input}\n                    key={key}\n                    label={key}\n                    value={chosen[item][key]}\n                    variant=\"outlined\"\n                    multiline\n                    fullWidth\n                    rowsMax=\"4\"\n                  />\n                  <br />\n                </>\n              );\n            })}\n          </Paper>\n        );\n      })\n    : null;*/\n\n  return (\n    <Grid item xs={9}>\n      <h2 className={classes.title}>{collectionTitle}</h2>\n      {serializer && (\n        <MaterialTable\n          style={{ margin: 20 }}\n          title={cardsetChosen ? cardsetChosen : collectionTitle}\n          icons={tableIcons}\n          editable={{\n            onRowAdd: newData => handleAdd(newData, title, cardsetChosen)\n          }}\n          columns={columns}\n          data={data}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default Collections;\n","import React from \"react\";\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100%\"\n  },\n  container: {\n    height: \"100%\"\n  },\n  title: {\n    color: theme.palette.primary.main\n  },\n  list: {\n    position: \"relative\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.main\n    },\n    backgroundColor: theme.palette.secondary.main,\n    \"&:before\": {\n      content: \"''\",\n      position: \"absolute\",\n      left: 0,\n      width: 5,\n      height: \"100%\",\n      backgroundColor: theme.palette.primary.main\n    }\n  }\n}));\n\nconst SideBar = ({ cardsets, handleSelect }) => {\n  const classes = useStyles();\n  const [selected, setSelect] = React.useState(null);\n\n  const handleClick = (collection, cardset = null) => {\n    if (cardset) {\n      setSelect(cardset);\n      handleSelect(\"cardsets\", cardset);\n    } else {\n      setSelect(collection);\n      handleSelect(collection);\n    }\n  };\n\n  const cardsetList = cardsets\n    ? cardsets.map(cardset => {\n        return (\n          <ListItem\n            key={cardset._id}\n            button\n            classes={{\n              selected: classes.list\n            }}\n            selected={selected === cardset.name}\n            onClick={() => handleClick(\"cardsets\", cardset.name)}\n          >\n            <ListItemText primary={cardset.name} />\n          </ListItem>\n        );\n      })\n    : null;\n\n  return (\n    <Grid className={classes.root} item xs={3}>\n      <div className={classes.container}>\n        <h2 className={classes.title}>Collections</h2>\n        <List component=\"nav\" subheader={<li />}>\n          <ListItem\n            button\n            classes={{\n              selected: classes.list\n            }}\n            onClick={() => handleClick(\"users\")}\n            selected={selected === \"users\"}\n          >\n            <ListItemText primary=\"Users\" />\n          </ListItem>\n          <ListItem\n            button\n            classes={{\n              selected: classes.list\n            }}\n            onClick={() => handleClick(\"services\")}\n            selected={selected === \"services\"}\n          >\n            <ListItemText primary=\"Services\" />\n          </ListItem>\n          <ListSubheader>Cardsets</ListSubheader>\n          {cardsetList}\n        </List>\n      </div>\n    </Grid>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport Collections from \"../admin/Collection\";\nimport SideBar from \"../admin/SideBar\";\n\nconst styles = theme => ({\n  root: {\n    height: \"100%\"\n  }\n});\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardsets: null,\n      users: null,\n      services: null,\n      chosenCollection: null,\n      collectionName: null,\n      chosenSerializer: null,\n      chosenCardset: null,\n      url: \"http://localhost:4000/\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.state.url + \"cardsets\")\n      .then(res => res.json())\n      .then(cardsets =>\n        this.setState({\n          cardsets: cardsets\n        })\n      );\n\n    fetch(this.state.url + \"services\")\n      .then(res => res.json())\n      .then(services =>\n        this.setState({\n          services: services\n        })\n      );\n  }\n  handleSelect = (collection, cardsetName = null) => {\n    console.log(collection);\n    let serializer, chosenCollection;\n    switch (collection) {\n      case \"services\":\n        serializer = [\"_id\", \"title\", \"description\"];\n        chosenCollection = this.state.services;\n        break;\n      case \"users\":\n        serializer = [\"_id\", \"email\", \"school\"];\n        chosenCollection = this.state.users;\n        break;\n      case \"cardsets\":\n        serializer = [\"_id\", \"front\", \"back\"];\n        console.log(this.state.cardsets, cardsetName);\n        chosenCollection = this.state.cardsets.filter(\n          cardset => cardset.name === cardsetName\n        )[0].cards;\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      chosenCollection: chosenCollection,\n      collectionName: collection,\n      chosenSerializer: serializer,\n      chosenCardset: cardsetName\n    });\n  };\n\n  handleAdd = (collection, title, cardset = null) => {\n    if (cardset) {\n      //do stuff\n    } else {\n      fetch(this.state.url + \"services\", {\n        mode: \"cors\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"post\"\n      });\n    }\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container className={classes.root} spacing={0}>\n        <SideBar\n          cardsets={this.state.cardsets}\n          handleSelect={this.handleSelect}\n        />\n        <Collections\n          chosen={this.state.chosenCollection}\n          title={this.state.collectionName}\n          serializer={this.state.chosenSerializer}\n          cardsetChosen={this.state.chosenCardset}\n          handleAdd={this.handleAdd}\n        />\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Admin);\n","import React from \"react\";\n\nconst AdminLogin = () => {\n  return (\n    <div>\n      <h2>AdminLogin</h2>\n    </div>\n  );\n};\n\nexport default AdminLogin;\n","import React from \"react\";\nimport Header from \"../common/Header\";\nimport { Router } from \"@reach/router\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport CardContainer from \"../card/CardContainer\";\nimport ListContainer from \"../list/ListContainer\";\nimport CourseContainer from \"../cardset/CourseContainer\";\nimport Home from \"../pages/Home\";\nimport Services from \"../pages/Services\";\nimport About from \"../pages/About\";\nimport Contact from \"../pages/Contact\";\nimport Admin from \"../pages/Admin\";\nimport AdminLogin from \"../pages/AdminLogin\";\n\nconst useStyles = makeStyles(theme => ({\n  courseList: {\n    height: \"100%\",\n    marginRight: 20\n  },\n  wrapper: {\n    minHeight: \"100%\",\n    marginBottom: -50,\n    backgroundColor: \"white\"\n  },\n  push: {\n    height: 50\n  },\n  footer: {\n    height: 50,\n    backgroundColor: theme.palette.primary.main\n  },\n  \"@global\": {\n    html: {\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  routes: {\n    height: \"100%\"\n  }\n}));\n\nconst Routes = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.wrapper}>\n        <Header />\n        <Router className={classes.routes}>\n          <Home path=\"/\" />\n          <About path=\"about\" />\n          <Services path=\"services\" />\n          <Contact path=\"contact\" />\n          <Card listStyle={classes.courseList} path=\"card\" />\n          <Admin path=\"admin\" />\n          <AdminLogin path=\"admin/login\" />\n        </Router>\n        <div className={classes.push}></div>\n      </div>\n      <div className={classes.footer}></div>\n    </>\n  );\n};\n\nexport default Routes;\n\nconst Card = ({ listStyle }) => (\n  <>\n    <Grid container spacing={0} justify=\"center\">\n      <Grid item className={listStyle}>\n        <CourseContainer />\n      </Grid>\n      <Grid item>\n        <CardContainer />\n        <ListContainer />\n      </Grid>\n    </Grid>\n  </>\n);\n","import React from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport TestMasterTheme from \"./theme\";\nimport { Provider } from \"react-redux\";\nimport storeConfig from \"../store\";\nimport \"./App.css\";\nimport Routes from \"../routes/Router\";\n\nconst store = storeConfig();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={TestMasterTheme}>\n        <Routes />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}